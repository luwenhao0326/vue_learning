// 当代码量很大时，可以将代码分散在多个js文件中，每个js文件单独实现一个小功能，这些js文件共同组成一个完整的大功能。

// 在浏览器环境中，可以通过多个script标签导入多个js文件。但是这种合并代码方法有以下缺点：
// 1.多个js文件的导入必须按照依赖关系先后导入。
// 2.使用script标签导入的多个js文件本质上是拼接成了一个js文件，所以这些js文件运行时都处于同一个全局作用域，那么这些js文件中不能使用同名的全局变量。


// ----------------------------------------------

// 在nodejs中也可以实现将不同的功能写入不同的js文件，在某个js文件中需要什么功能就导入哪个功能的js文件。
// 这叫做nodejs的模块化。


// 当第一次导入某个js文件时，这个js文件会执行并获得导出内容。
var plzh = require("./pailiezuhe.js");

// 某个js文件运行得到导出内容之后，导出的内容会被缓存起来，下次再导入这个js文件时，就会直接获得上次的导出结果，不在运行js文件。
// var plz = require("./pailiezuhe.js");
// var pl = require("./pailiezuhe.js");

var n = 10;
var m = 4;

console.log(plzh.pailie(n,m));
console.log(plzh.zuhe(n,m));
